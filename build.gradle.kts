/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    `java-library`
}

repositories {
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api("org.apache.commons:commons-math3:3.6.1")

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("com.google.guava:guava:31.0.1-jre")
    implementation("org.jetbrains:annotations:23.0.0")
    implementation(files("/Users/ignatov/src/toolbox/feature/gateway-plugin-api/build/classes/java/main/"))
}

val generateJson = tasks.register<DefaultTask>("generateJson") {
    val project = project.rootProject

    val ext = Extension(
        id = project.name,
        version = project.version.toString(),
        meta = Meta(
            readableName = "Chunga Change",
            description = "Chunga Changa plugin",
            vendor = "JetBrains",
        ),
        compatibleVersionRange = CompatibleVersionRange(
            from = "1.1",
            to = "1.2",
        )
    )
    val outputFile = File("$buildDir/generated-json/extension.json")
    outputFile.parentFile.mkdirs()
    outputFile.writeText(ext.toJson())
}

version = "0.1"

tasks.register<Zip>("createZip") {
    dependsOn(tasks.assemble, generateJson)
    val compileClasspath = configurations.compileClasspath
    from(compileClasspath.get().files.filter { it.extension == "jar" })
    from(file("$buildDir/libs/lib.jar"))
    from(file("$buildDir/generated-json/extension.jar"))
    val rootProject = project.rootProject
    archiveFileName.set("${rootProject.name}-${rootProject.version}.zip")
    destinationDirectory.set(file("$buildDir/libs"))
}